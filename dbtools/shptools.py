# -*- coding: utf-8 -*-
"""
/***************************************************************************
 Prisma
                                 A QGIS plugin
 Plugin para fazer caracterização de imóveis
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-09-29
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Zago
        email                : guilherme.nascimento@economia.gov.br
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import geopandas as gpd

class HandleShapefile():

    def __init__(self):
        pass

    def OverlayAnalisys(self, operation_data):
        self.operation_data = operation_data
        areas = []
        count = len(self.operation_data['comparasion_shapefile']) - 1
        for i in 0, count:
            areas.append(gpd.read_file(self.operation_data['comparasion_shapefile'][i]))

        # for area in areas:
        #     for indexArea, rowArea in area.iterrows():
        #         for indexInput, rowInput in input.iterrows():
        #             # print(rowArea['geometry'].intersects(rowInput['geometry']))
        #             print(rowArea['geometry'].intersects(rowInput['geometry']))

        print(areas)
        # return gpds

        # self.quilombola = self.quilombola.to_crs(31982)
        # gpd.read_file()

        return




